{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.ts","webpack:///./src/index.html","webpack:///./scripts/render.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","ColorPalette","generator","AsciiArtGenerator","_this","this","settings","charSet","url","charSamples","size","contrast","brightness","alpha","Monochrome","debug","isDemoRunning","saveAsHtml","asciiElement","style","setProperty","width","toString","height","blob","Blob","outerHTML","exportElement","href","URL","createObjectURL","click","demoDirection","demoSettings","demoIndex","isImageLoaded","charRegions","colorMap","valueMap","normalizedMap","cachedUrls","colorPalettes","elements","debugImageElement","debugCharsElement","initGui","generatePalettes","analyzeCharRegions","loadFromUrl","initDemo","demo","stopDemo","window","removeEventListener","addEventListener","gui","dat","GUI","add","onChange","generate","listen","normalizeValueMap","document","getElementById","Grey2Bit","Grey4Bit","push","Grey8Bit","Color3Bit","Color4Bit","slice","analyzeChar","char","canvas","createElement","ctx","getContext","font","fillText","data","getImageData","values","cellY","cellX","posY","posX","appendChild","fillStyle","fillRect","console","log","normalizeCharRegions","min","max","_i","_a","length","region","diff","regions","index","clearElement","onImageLoaded","img_1","crossOrigin","src","urls","keys","img","drawImage","body","generateValueMap","Array","from","rowLength","cell","pos","pos_1","_b","regions_1","_c","_d","normals","getClosestChar","minDiff","Number","MAX_VALUE","minChar","Math","abs","element","firstChild","removeChild","arrayToRgba","color","getCharColor","ColorFull","closestColor","paletteColor","concat","innerHTML","replace","requestAnimationFrame"],"mappings":"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","file":"static/js/bundle.8dae36d575892f3fc57d.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import { GUI } from 'dat.gui'\nimport { url } from 'inspector';\ndeclare var dat: any;\ninterface Dict<T> {\n  [key: string]: T;\n}\n\nenum ColorPalette {\n  Monochrome = 'none',\n  Grey2Bit = 'grey2bit',\n  Grey4Bit = 'grey4bit',\n  Grey8Bit = 'grey8bit',\n  Color3Bit = 'color3bit',\n  Color4Bit = 'color4bit',\n  ColorFull = 'color',\n}\n\nclass AsciiArtGenerator {\n  settings = {\n    charSet: ' !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~',\n    url: '/avatar.png',\n    charSamples: 1,\n    size: 50,\n    contrast: 0,\n    brightness: 0,\n    alpha: 0,\n    ColorPalette: ColorPalette.Monochrome,\n    debug: false,\n    isDemoRunning: true,\n    saveAsHtml: () => {\n      this.asciiElement.style.setProperty('--width', this.width.toString());\n      this.asciiElement.style.setProperty('--height', this.height.toString());\n      const blob = new Blob([this.asciiElement.outerHTML]);\n      this.exportElement.href = URL.createObjectURL(blob);\n      this.exportElement.click();\n    },\n  };\n  demoDirection = -1;\n  demoSettings: { url: string, size: number, charSamples: number }[] = [\n    {\n      url: '/avatar.png',\n      size: 50,\n      charSamples: 1,\n    },\n    {\n      url: '/slogan.png',\n      size: 60,\n      charSamples: 2,\n    },\n    {\n      url: '/codepen.png',\n      size: 120,\n      charSamples: 2,\n    },\n  ];\n  demoIndex = 0;\n  isImageLoaded = false;\n  charRegions: Dict<number[]> = {};\n  colorMap: number[][] = [];\n  valueMap: number[][] = [];\n  normalizedMap: number[][] = [];\n  width: number = 0;\n  height: number = 0;\n  cachedUrls: Dict<HTMLImageElement> = {};\n  asciiElement: HTMLElement;\n  exportElement: HTMLAnchorElement;\n  debugImageElement: HTMLElement;\n  debugCharsElement: HTMLElement;\n  colorPalettes: Dict<number[][]> = {};\n\n  constructor() {\n    const elements = this.elements;\n    this.asciiElement = elements.asciiElement;\n    this.exportElement = elements.exportElement;\n    this.debugImageElement = elements.debugImageElement;\n    this.debugCharsElement = elements.debugCharsElement;\n\n    this.initGui();\n    this.generatePalettes();\n    this.analyzeCharRegions();\n    this.loadFromUrl();\n    this.initDemo();\n  }\n\n  initDemo() {\n    this.demo();\n    const stopDemo = () => {\n      this.settings.isDemoRunning = false;\n      window.removeEventListener('mousedown', stopDemo);\n    }\n    window.addEventListener('mousedown', stopDemo)\n  }\n\n  initGui() {\n    const gui: GUI = new dat.GUI();\n    gui.add(this.settings, 'charSet').onChange(() => {\n      this.analyzeCharRegions();\n      this.generate();\n    });\n    gui.add(this.settings, 'url').listen().onChange(() => this.loadFromUrl());\n    gui.add(this.settings, 'charSamples', 1, 3, 1).listen().onChange(() => {\n      this.analyzeCharRegions();\n      this.loadFromUrl();\n    });\n    gui.add(this.settings, 'size', 10, 150, 1).listen().onChange(() => this.loadFromUrl());\n    gui.add(this.settings, 'contrast', -1, 1, 0.01).onChange(() => {\n      this.normalizeValueMap();\n      this.generate();\n    });\n    gui.add(this.settings, 'brightness', -1, 1, 0.01).listen().onChange(() => {\n      this.normalizeValueMap();\n      this.generate();\n    });\n    gui.add(this.settings, 'alpha', -1, 1, 0.01).onChange(() => this.generate());\n    gui.add(this.settings, 'ColorPalette', ColorPalette).onChange(() => {\n      this.generate();\n    });\n    gui.add(this.settings, 'debug').onChange(() => {\n      this.analyzeCharRegions();\n      this.loadFromUrl();\n    });\n    gui.add(this.settings, 'isDemoRunning').listen().onChange(() => {\n      if (this.settings.isDemoRunning) {\n        this.demo();\n      }\n    });\n    gui.add(this.settings, 'saveAsHtml')\n  }\n\n  get elements() {\n    const asciiElement = document.getElementById('ascii');\n    if (!asciiElement) throw '#ascii Element is missing';\n    const exportElement = document.getElementById('export') as HTMLAnchorElement;\n    if (!exportElement) throw '#export Element is missing';\n    const debugImageElement = document.getElementById('debug-image');\n    if (!debugImageElement) throw '#debug-image Element is missing';\n    const debugCharsElement = document.getElementById('debug-chars');\n    if (!debugCharsElement) throw '#debug-chars Element is missing';\n    return { asciiElement, exportElement, debugImageElement, debugCharsElement };\n  }\n\n  generatePalettes() {\n    this.colorPalettes[ColorPalette.Grey2Bit] = [\n      [0, 0, 0],\n      [104, 104, 104],\n      [184, 184, 184],\n      [255, 255, 255],\n    ];\n\n    this.colorPalettes[ColorPalette.Grey4Bit] = [];\n    for (let i = 0; i < 16; i += 1) {\n      this.colorPalettes[ColorPalette.Grey4Bit].push([i * 17, i * 17, i * 17]);\n    }\n\n    this.colorPalettes[ColorPalette.Grey8Bit] = [];\n    for (let i = 0; i < 256; i += 1) {\n      this.colorPalettes[ColorPalette.Grey8Bit].push([i, i, i]);\n    }\n    this.colorPalettes[ColorPalette.Color3Bit] = [\n      [0, 0, 0],\n      [0, 249, 45],\n      [0, 252, 254],\n      [255, 48, 21],\n      [255, 62, 253],\n      [254, 253, 52],\n      [16, 37, 251],\n      [255, 255, 255],\n    ];\n    this.colorPalettes[ColorPalette.Color4Bit] = [...this.colorPalettes[ColorPalette.Color3Bit]];\n    for (let i = 1; i < 8; i += 1) {\n      this.colorPalettes[ColorPalette.Color4Bit].push([i * 32, i * 32, i * 32]);\n    }\n  }\n\n  analyzeChar(char: string) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 12;\n    canvas.height = 12;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) throw 'context creation failed';\n    ctx.font = '12px monospace';\n    ctx.fillText(char, 2, 10);\n    const data = ctx.getImageData(0, 0, 12, 12).data;\n    const values: number[] = [];\n    const size = 12 / this.settings.charSamples;\n    for (let cellY = 0; cellY < this.settings.charSamples; cellY += 1) {\n      for (let cellX = 0; cellX < this.settings.charSamples; cellX += 1) {\n        let value = 0;\n        for (let posY = 0; posY < size; posY += 1) {\n          for (let posX = 0; posX < size; posX += 1) {\n            value += data[(cellX * size + posX + (cellY * size + posY) * 12) * 4 + 3];\n          }\n        }\n        values.push(value / (size * size) / 255);\n      }\n    }\n    if (this.settings.debug) {\n      this.debugCharsElement.appendChild(canvas);\n      for (let cellX = 0; cellX < this.settings.charSamples; cellX += 1) {\n        for (let cellY = 0; cellY < this.settings.charSamples; cellY += 1) {\n          ctx.fillStyle = `rgba(255, 0, 255, ${values[cellX + cellY * this.settings.charSamples]})`;\n          ctx.fillRect(cellX * size, cellY * size, size, size);\n        }\n      }\n      console.log({ char, values });\n    }\n    this.charRegions[char] = values;\n  }\n\n  normalizeCharRegions() {\n    let min = 1;\n    let max = 0;\n    for (const char in this.charRegions) {\n      // let value = 0;\n      for (const region of this.charRegions[char]) {\n        if (min > region) min = region;\n        if (max < region) max = region;\n        // value += region;\n      }\n      // value /= this.settings.charSamples * this.settings.charSamples;\n      // if (min > value) min = value;\n      // if (max < value) max = value;\n    }\n    if (max > 0 && min != max) {\n      const diff = max - min;\n      for (const char in this.charRegions) {\n        const regions = this.charRegions[char];\n        for (let index = 0; index < regions.length; index += 1) {\n          regions[index] = (regions[index] - min) * (1 / diff);\n        }\n      }\n    }\n    if (this.settings.debug) {\n      console.log({ min, max, charRegions: this.charRegions });\n    }\n  }\n\n  analyzeCharRegions() {\n    this.clearElement(this.debugCharsElement);\n    this.charRegions = {};\n    for (const char of this.settings.charSet) {\n      this.analyzeChar(char);\n    }\n    this.normalizeCharRegions();\n  }\n\n  loadFromUrl() {\n    this.isImageLoaded = false;\n    if (this.cachedUrls[this.settings.url]) {\n      this.onImageLoaded(this.cachedUrls[this.settings.url]);\n    } else {\n      const img = document.createElement('img');\n      img.crossOrigin = 'Anonymous';\n      img.src = this.settings.url;\n      img.addEventListener('load', () => {\n        this.cachedUrls[this.settings.url] = img;\n        this.onImageLoaded(img);\n      });\n      img.addEventListener('error', () => {\n        const urls = Object.keys(this.cachedUrls);\n        if (urls.length > 0) {\n          this.onImageLoaded(this.cachedUrls[urls[urls.length - 1]]);\n        }\n      });\n    }\n  }\n\n  onImageLoaded(img: HTMLImageElement) {\n    this.width = this.settings.size;\n    this.height = ~~((img.height / img.width) * this.width / 1.9);\n    const canvas = document.createElement('canvas');\n    canvas.width = this.width * this.settings.charSamples;\n    canvas.height = this.height * this.settings.charSamples;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) throw 'context creation failed';\n    ctx.drawImage(img, 0, 0, this.width * this.settings.charSamples, this.height * this.settings.charSamples);\n    this.clearElement(this.debugImageElement);\n    if (this.settings.debug) {\n      this.debugImageElement.appendChild(canvas);\n      console.log({ img, width: this.width, height: this.height });\n    }\n    document.body.style.setProperty('--width', this.width.toString());\n    document.body.style.setProperty('--height', this.height.toString());\n    this.generateValueMap(ctx);\n    this.isImageLoaded = true;\n  }\n\n  generateValueMap(ctx: CanvasRenderingContext2D) {\n    this.valueMap = [];\n    this.colorMap = [];\n    const data = Array.from(ctx.getImageData(0, 0, this.width * this.settings.charSamples, this.height * this.settings.charSamples).data);\n    const rowLength = this.width * this.settings.charSamples * 4;\n    for (let cellY = 0; cellY < this.height; cellY += 1) {\n      for (let cellX = 0; cellX < this.width; cellX += 1) {\n        const cell = [];\n        const pos = (cellX * this.settings.charSamples) * 4 + (cellY * this.settings.charSamples) * rowLength;\n        this.colorMap.push(data.slice(pos, pos + 4));\n        for (let posY = 0; posY < this.settings.charSamples; posY += 1) {\n          for (let posX = 0; posX < this.settings.charSamples; posX += 1) {\n            const pos = (cellX * this.settings.charSamples + posX) * 4 + (cellY * this.settings.charSamples + posY) * rowLength;\n            const alpha = data[pos + 3] / 255;\n            const values = data.slice(pos, pos + 3);\n            const value = 1 - ((values[0] + values[1] + values[2]) / 765 * (alpha) + 1 - alpha);\n            if (this.settings.debug) {\n              ctx.fillStyle = `rgba(255, 0, 255, ${value})`;\n              ctx.fillRect(cellX * this.settings.charSamples + posX, cellY * this.settings.charSamples + posY, 1, 1);\n            }\n            cell.push(value);\n          }\n        }\n        this.valueMap.push(cell);\n      }\n    }\n    if (this.settings.debug) {\n      console.log({ valueMap: this.valueMap, colorMap: this.colorMap });\n    }\n    this.normalizeValueMap();\n    this.generate();\n  }\n\n  normalizeValueMap() {\n    let min = 1;\n    let max = 0;\n    for (const regions of this.valueMap) {\n      // const value = 0;\n      for (const region of regions) {\n        if (min > region) min = region;\n        if (max < region) max = region;\n        // value += region;\n      }\n      // value /= this.settings.charSamples * this.settings.charSamples;\n      // if (min > value) min = value;\n      // if (max < value) max = value;\n    }\n    if (max > 0 && min != max) {\n      const diff = max - min;\n      this.normalizedMap = [];\n      for (const regions of this.valueMap) {\n        const normals = Array.from(regions);\n        for (let index = 0; index < normals.length; index += 1) {\n          normals[index] = (normals[index] - min) * (1 / diff);\n          normals[index] = (this.settings.contrast + 1) * (normals[index] - 0.5) + 0.5 + this.settings.brightness;\n        }\n        this.normalizedMap.push(normals);\n      }\n    } else {\n      this.normalizedMap = this.valueMap;\n    }\n    if (this.settings.debug) {\n      console.log({ min, max, valueMap: this.valueMap });\n    }\n  }\n\n  getClosestChar(values: number[]) {\n    let minDiff = Number.MAX_VALUE;\n    let minChar = '';\n    for (const char in this.charRegions) {\n      const regions = this.charRegions[char];\n      let diff = 0;\n      for (let index = 0; index < regions.length; index++) {\n        diff += Math.abs(regions[index] - values[index]);\n      }\n      if (diff < minDiff) {\n        minDiff = diff;\n        minChar = char;\n      }\n    }\n    return minChar;\n  }\n\n  clearElement(element: HTMLElement) {\n    while (element.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n  }\n\n  arrayToRgba(color: number[]) {\n    const r = color[0] > 0 ? ~~color[0] : 255;\n    const g = color[1] > 0 ? ~~color[1] : 255;\n    const b = color[2] > 0 ? ~~color[2] : 255;\n    const a = Math.max(0, Math.min(1, color[3] / 255 + this.settings.alpha));\n    return `rgba(${r},${g},${b},${a})`;\n  }\n\n  getCharColor(color: number[]) {\n    if (this.settings.ColorPalette === ColorPalette.ColorFull) {\n      return this.arrayToRgba(color);\n    } else {\n      let closestColor = [0, 0, 0];\n      let minDiff = Number.MAX_VALUE;\n      for (const paletteColor of this.colorPalettes[this.settings.ColorPalette]) {\n        const diff = Math.abs(color[0] - paletteColor[0]) + Math.abs(color[1] - paletteColor[1]) + Math.abs(color[2] - paletteColor[2]);\n        if (diff < minDiff) {\n          minDiff = diff;\n          closestColor = paletteColor;\n        }\n      }\n      return this.arrayToRgba([...closestColor, color[3]]);\n    }\n  }\n\n  generate() {\n    this.clearElement(this.asciiElement);\n    for (let cellY = 0; cellY < this.height; cellY += 1) {\n      for (let cellX = 0; cellX < this.width; cellX += 1) {\n        const cell = document.createElement('div');\n        if (this.settings.ColorPalette !== ColorPalette.Monochrome) {\n          cell.style.color = this.getCharColor(this.colorMap[cellX + cellY * this.width]);\n        }\n        cell.innerHTML = this.getClosestChar(this.normalizedMap[cellX + cellY * this.width]).replace(' ', '&nbsp;');\n        this.asciiElement.appendChild(cell);\n      }\n    }\n  }\n\n  demo() {\n    if (this.settings.isDemoRunning) {\n      if (this.isImageLoaded) {\n        this.settings.brightness += 0.05 * this.demoDirection;\n        this.normalizeValueMap();\n        this.generate();\n        if (this.settings.brightness >= 0 || this.settings.brightness <= -1) {\n          this.demoDirection *= -1;\n        }\n        if (this.settings.brightness <= -1) {\n          this.demoIndex = (this.demoIndex + 1) % this.demoSettings.length;\n          this.settings.url = this.demoSettings[this.demoIndex].url;\n          this.settings.size = this.demoSettings[this.demoIndex].size;\n          this.settings.charSamples = this.demoSettings[this.demoIndex].charSamples;\n          this.analyzeCharRegions();\n          this.loadFromUrl();\n        }\n      }\n      requestAnimationFrame(() => this.demo());\n    }\n  }\n}\n\nconst generator = new AsciiArtGenerator();\nconsole.log(generator);\n","module.exports = \"<div id=\\\"ascii\\\" style=\\\"\\n    display: grid;\\n    grid-template-columns: repeat(var(--width), 1fr);\\n    font-family: 'Courier New', Courier, monospace;\\n    font-size: 9px;\\n    width: calc(var(--width) * 5.41px);\\n    height: calc(var(--height) * 10px);\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n  \\\">\\n</div>\\n<div id=\\\"debug-image\\\"></div>\\n<div id=\\\"debug-chars\\\"></div>\\n<a id=\\\"export\\\" href=\\\"#\\\" download=\\\"ascii-art.html\\\"></a>\\n\"","// If you don't need HMR:\n// Modify the Boilerplate at public/index.html\n// and require style and body directly\n\n// Load style\nimport '../src/index.css'\n\n// Render HTML body\nconst body = require('../src/index.html');\ndocument.body.innerHTML = body;\n"],"sourceRoot":""}